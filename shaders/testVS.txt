#version 300 es

uniform mat4 u_model_view_matrix;
uniform mat4 u_projection_matrix;
uniform mat4 u_normal_matrix;

uniform vec3 u_direct_light_direction;
uniform vec3 u_direct_light_color;
uniform float u_direct_light_value;

uniform vec3 u_ambient_light_color;
uniform float u_ambient_light_value;

in vec4 a_position;
in vec4 a_color;
in vec4 a_normal;
in vec3 a_map;

out vec4 vertex_color;



void main() {

  mat4 mvp_matrix = u_projection_matrix * u_model_view_matrix;
  vec4 normal = u_normal_matrix * a_normal;

  float lambert_factor = max(dot(vec3(normal), -u_direct_light_direction), 0.0)  * u_direct_light_value;

  vertex_color = a_color * vec4(u_direct_light_color * lambert_factor, 1)
    + vec4(u_ambient_light_color * u_ambient_light_value, 1);

  gl_Position = mvp_matrix *  a_position;
}